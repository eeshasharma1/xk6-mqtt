syntax = "proto3";

package vehicle_command_producer.proto;

import "google/protobuf/timestamp.proto";

service VehicleCommandProducerService {
  rpc Ping(PingRequest) returns (PingResponse) {}
  // SendCommand produces the provided command to Kafka. Optionally, a timestamp
  // may be provided with the command's produce timestamp for E2E latency purposes.
  rpc SendCommand(SendCommandRequest) returns (SendCommandResponse) {}
}

message SendCommandRequest {
  string vehicle_uuid = 1;
  CommandQueueWrapper command_wrapper = 3;

  reserved 2;
  reserved "command";
}

message SendCommandResponse {}

message PingRequest {}

message PingResponse {}


message CommandQueueWrapper {
    Command command = 1;
    google.protobuf.Timestamp enqueue_time = 2;
  }
  
  message Command {
    oneof command_message {
      BlinkerDance blinker_dance = 2;
      BlinkerRun blinker_run = 3;
      VehicleLock vehicle_lock = 4;
      CameraStream camera_stream = 5;
      RefreshData refresh_data = 6;
      RemoteNavigation remote_navigation = 7;
      UpdateOtaCampaign update_ota_campaign = 8;
      UpdateUserVehicleSettings update_user_vehicle_settings = 9;
      ChargeState charge_state = 11;
    }
  
    bytes uuid = 12;  // uuidv4 encoded as 16 bytes to uniquely identify the command message
  
    reserved 1;
  }
  
  message BlinkerDance {
    bool run_blinker_dance = 1;
  }
  
  message BlinkerRun {
    bool run_blinker_run = 1;
  }
  
  message VehicleLock {
    bool lock_vehicle = 1;
  }
  
  message CameraStream {
    enum CameraType {
      UNSET = 0;
      FRONT = 1;
      CABIN = 2;
      REAR = 3;
      LEFT_SIDE = 4;
      RIGHT_SIDE = 5;
      FRONT_LEFT = 6;
      FRONT_RIGHT = 7;
    }
    bool stream_camera = 1;
    CameraType camera_type = 2;
  }
  
  // Used to trigger different refreshes on the vehicle when appropriate.
  // Allows us to remove polling from the vehicle.
  message RefreshData {
    enum RefreshType {
      UNSET = 0;
      GET_UPDATE_INFO = 1;
      GET_SOFTWARE_UPDATE = 2;
      LOGGING_RULE_UPDATE = 3;
    }
    RefreshType refresh_type = 1;
  }
  
  message RemoteNavigation {
    string google_maps_uri = 1;
  }
  
  message ThirdPartyCommand {
    oneof command {
      Garage garage = 1;
    }
  }
  
  message Garage {
    enum Action {
      UNSET = 0;
      OPEN = 1;
      CLOSE = 2;
      GET_STATE = 3;
    }
  
    Action action = 4;
    string token = 5;
  
    reserved 1, 2, 3;
  }
  
  message GarageState {
    enum State {
      UNSET = 0;
      // The below states all come from here
      // https://github.com/arraylabs/pymyq/blob/master/pymyq/garagedoor.py#L20
      UNKNOWN = 1;
      STOPPED = 2;
      CLOSING = 3;
      CLOSED = 4;
      OPENING = 5;
      OPEN = 6;
    }
  
    State state = 1;
  }
  
  // Next ID: 3
  message UpdateOtaCampaign {
    string campaign_uuid = 1;
    google.protobuf.Timestamp scheduled_install_time_utc = 2;
  }
  
  message UpdateUserVehicleSettings {
    string user_uuid = 1;
  }
  
  message ChargeState {
    enum Action {
      UNSET = 0;
      START_CHARGING = 1;
      STOP_CHARGING = 2;
    }
    Action action = 1;
  }
  