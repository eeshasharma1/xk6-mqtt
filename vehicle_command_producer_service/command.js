/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.Command');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.BlinkerDance');
goog.require('proto.BlinkerRun');
goog.require('proto.CameraStream');
goog.require('proto.ChargeState');
goog.require('proto.RefreshData');
goog.require('proto.RemoteNavigation');
goog.require('proto.UpdateOtaCampaign');
goog.require('proto.UpdateUserVehicleSettings');
goog.require('proto.VehicleLock');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.Command.oneofGroups_);
};
goog.inherits(proto.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Command.displayName = 'proto.Command';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.Command.oneofGroups_ = [[2,3,4,5,6,7,8,9,11]];

/**
 * @enum {number}
 */
proto.Command.CommandMessageCase = {
  COMMAND_MESSAGE_NOT_SET: 0,
  BLINKER_DANCE: 2,
  BLINKER_RUN: 3,
  VEHICLE_LOCK: 4,
  CAMERA_STREAM: 5,
  REFRESH_DATA: 6,
  REMOTE_NAVIGATION: 7,
  UPDATE_OTA_CAMPAIGN: 8,
  UPDATE_USER_VEHICLE_SETTINGS: 9,
  CHARGE_STATE: 11
};

/**
 * @return {proto.Command.CommandMessageCase}
 */
proto.Command.prototype.getCommandMessageCase = function() {
  return /** @type {proto.Command.CommandMessageCase} */(jspb.Message.computeOneofCase(this, proto.Command.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    blinkerDance: (f = msg.getBlinkerDance()) && proto.BlinkerDance.toObject(includeInstance, f),
    blinkerRun: (f = msg.getBlinkerRun()) && proto.BlinkerRun.toObject(includeInstance, f),
    vehicleLock: (f = msg.getVehicleLock()) && proto.VehicleLock.toObject(includeInstance, f),
    cameraStream: (f = msg.getCameraStream()) && proto.CameraStream.toObject(includeInstance, f),
    refreshData: (f = msg.getRefreshData()) && proto.RefreshData.toObject(includeInstance, f),
    remoteNavigation: (f = msg.getRemoteNavigation()) && proto.RemoteNavigation.toObject(includeInstance, f),
    updateOtaCampaign: (f = msg.getUpdateOtaCampaign()) && proto.UpdateOtaCampaign.toObject(includeInstance, f),
    updateUserVehicleSettings: (f = msg.getUpdateUserVehicleSettings()) && proto.UpdateUserVehicleSettings.toObject(includeInstance, f),
    chargeState: (f = msg.getChargeState()) && proto.ChargeState.toObject(includeInstance, f),
    uuid: msg.getUuid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Command}
 */
proto.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Command;
  return proto.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Command}
 */
proto.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.BlinkerDance;
      reader.readMessage(value,proto.BlinkerDance.deserializeBinaryFromReader);
      msg.setBlinkerDance(value);
      break;
    case 3:
      var value = new proto.BlinkerRun;
      reader.readMessage(value,proto.BlinkerRun.deserializeBinaryFromReader);
      msg.setBlinkerRun(value);
      break;
    case 4:
      var value = new proto.VehicleLock;
      reader.readMessage(value,proto.VehicleLock.deserializeBinaryFromReader);
      msg.setVehicleLock(value);
      break;
    case 5:
      var value = new proto.CameraStream;
      reader.readMessage(value,proto.CameraStream.deserializeBinaryFromReader);
      msg.setCameraStream(value);
      break;
    case 6:
      var value = new proto.RefreshData;
      reader.readMessage(value,proto.RefreshData.deserializeBinaryFromReader);
      msg.setRefreshData(value);
      break;
    case 7:
      var value = new proto.RemoteNavigation;
      reader.readMessage(value,proto.RemoteNavigation.deserializeBinaryFromReader);
      msg.setRemoteNavigation(value);
      break;
    case 8:
      var value = new proto.UpdateOtaCampaign;
      reader.readMessage(value,proto.UpdateOtaCampaign.deserializeBinaryFromReader);
      msg.setUpdateOtaCampaign(value);
      break;
    case 9:
      var value = new proto.UpdateUserVehicleSettings;
      reader.readMessage(value,proto.UpdateUserVehicleSettings.deserializeBinaryFromReader);
      msg.setUpdateUserVehicleSettings(value);
      break;
    case 11:
      var value = new proto.ChargeState;
      reader.readMessage(value,proto.ChargeState.deserializeBinaryFromReader);
      msg.setChargeState(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlinkerDance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.BlinkerDance.serializeBinaryToWriter
    );
  }
  f = message.getBlinkerRun();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.BlinkerRun.serializeBinaryToWriter
    );
  }
  f = message.getVehicleLock();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.VehicleLock.serializeBinaryToWriter
    );
  }
  f = message.getCameraStream();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CameraStream.serializeBinaryToWriter
    );
  }
  f = message.getRefreshData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.RefreshData.serializeBinaryToWriter
    );
  }
  f = message.getRemoteNavigation();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RemoteNavigation.serializeBinaryToWriter
    );
  }
  f = message.getUpdateOtaCampaign();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.UpdateOtaCampaign.serializeBinaryToWriter
    );
  }
  f = message.getUpdateUserVehicleSettings();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.UpdateUserVehicleSettings.serializeBinaryToWriter
    );
  }
  f = message.getChargeState();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.ChargeState.serializeBinaryToWriter
    );
  }
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * optional BlinkerDance blinker_dance = 2;
 * @return {?proto.BlinkerDance}
 */
proto.Command.prototype.getBlinkerDance = function() {
  return /** @type{?proto.BlinkerDance} */ (
    jspb.Message.getWrapperField(this, proto.BlinkerDance, 2));
};


/** @param {?proto.BlinkerDance|undefined} value */
proto.Command.prototype.setBlinkerDance = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearBlinkerDance = function() {
  this.setBlinkerDance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasBlinkerDance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BlinkerRun blinker_run = 3;
 * @return {?proto.BlinkerRun}
 */
proto.Command.prototype.getBlinkerRun = function() {
  return /** @type{?proto.BlinkerRun} */ (
    jspb.Message.getWrapperField(this, proto.BlinkerRun, 3));
};


/** @param {?proto.BlinkerRun|undefined} value */
proto.Command.prototype.setBlinkerRun = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearBlinkerRun = function() {
  this.setBlinkerRun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasBlinkerRun = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional VehicleLock vehicle_lock = 4;
 * @return {?proto.VehicleLock}
 */
proto.Command.prototype.getVehicleLock = function() {
  return /** @type{?proto.VehicleLock} */ (
    jspb.Message.getWrapperField(this, proto.VehicleLock, 4));
};


/** @param {?proto.VehicleLock|undefined} value */
proto.Command.prototype.setVehicleLock = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearVehicleLock = function() {
  this.setVehicleLock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasVehicleLock = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CameraStream camera_stream = 5;
 * @return {?proto.CameraStream}
 */
proto.Command.prototype.getCameraStream = function() {
  return /** @type{?proto.CameraStream} */ (
    jspb.Message.getWrapperField(this, proto.CameraStream, 5));
};


/** @param {?proto.CameraStream|undefined} value */
proto.Command.prototype.setCameraStream = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearCameraStream = function() {
  this.setCameraStream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasCameraStream = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RefreshData refresh_data = 6;
 * @return {?proto.RefreshData}
 */
proto.Command.prototype.getRefreshData = function() {
  return /** @type{?proto.RefreshData} */ (
    jspb.Message.getWrapperField(this, proto.RefreshData, 6));
};


/** @param {?proto.RefreshData|undefined} value */
proto.Command.prototype.setRefreshData = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearRefreshData = function() {
  this.setRefreshData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasRefreshData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RemoteNavigation remote_navigation = 7;
 * @return {?proto.RemoteNavigation}
 */
proto.Command.prototype.getRemoteNavigation = function() {
  return /** @type{?proto.RemoteNavigation} */ (
    jspb.Message.getWrapperField(this, proto.RemoteNavigation, 7));
};


/** @param {?proto.RemoteNavigation|undefined} value */
proto.Command.prototype.setRemoteNavigation = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearRemoteNavigation = function() {
  this.setRemoteNavigation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasRemoteNavigation = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UpdateOtaCampaign update_ota_campaign = 8;
 * @return {?proto.UpdateOtaCampaign}
 */
proto.Command.prototype.getUpdateOtaCampaign = function() {
  return /** @type{?proto.UpdateOtaCampaign} */ (
    jspb.Message.getWrapperField(this, proto.UpdateOtaCampaign, 8));
};


/** @param {?proto.UpdateOtaCampaign|undefined} value */
proto.Command.prototype.setUpdateOtaCampaign = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearUpdateOtaCampaign = function() {
  this.setUpdateOtaCampaign(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasUpdateOtaCampaign = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UpdateUserVehicleSettings update_user_vehicle_settings = 9;
 * @return {?proto.UpdateUserVehicleSettings}
 */
proto.Command.prototype.getUpdateUserVehicleSettings = function() {
  return /** @type{?proto.UpdateUserVehicleSettings} */ (
    jspb.Message.getWrapperField(this, proto.UpdateUserVehicleSettings, 9));
};


/** @param {?proto.UpdateUserVehicleSettings|undefined} value */
proto.Command.prototype.setUpdateUserVehicleSettings = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearUpdateUserVehicleSettings = function() {
  this.setUpdateUserVehicleSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasUpdateUserVehicleSettings = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ChargeState charge_state = 11;
 * @return {?proto.ChargeState}
 */
proto.Command.prototype.getChargeState = function() {
  return /** @type{?proto.ChargeState} */ (
    jspb.Message.getWrapperField(this, proto.ChargeState, 11));
};


/** @param {?proto.ChargeState|undefined} value */
proto.Command.prototype.setChargeState = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.Command.oneofGroups_[0], value);
};


proto.Command.prototype.clearChargeState = function() {
  this.setChargeState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Command.prototype.hasChargeState = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes uuid = 12;
 * @return {string}
 */
proto.Command.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes uuid = 12;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.Command.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes uuid = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.Command.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/** @param {!(string|Uint8Array)} value */
proto.Command.prototype.setUuid = function(value) {
  jspb.Message.setProto3BytesField(this, 12, value);
};


